// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: grpc/node.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 请求消息
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_grpc_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 响应消息
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_grpc_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 请求消息
type TaskExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   int64  `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	LogId    int64  `protobuf:"varint,2,opt,name=logId,proto3" json:"logId,omitempty"`
	Command  string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	IsSingle int64  `protobuf:"varint,4,opt,name=isSingle,proto3" json:"isSingle,omitempty"`
}

func (x *TaskExecRequest) Reset() {
	*x = TaskExecRequest{}
	mi := &file_grpc_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecRequest) ProtoMessage() {}

func (x *TaskExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecRequest.ProtoReflect.Descriptor instead.
func (*TaskExecRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{2}
}

func (x *TaskExecRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskExecRequest) GetLogId() int64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *TaskExecRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *TaskExecRequest) GetIsSingle() int64 {
	if x != nil {
		return x.IsSingle
	}
	return 0
}

// 响应消息
type TaskExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TaskExecResponse) Reset() {
	*x = TaskExecResponse{}
	mi := &file_grpc_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecResponse) ProtoMessage() {}

func (x *TaskExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecResponse.ProtoReflect.Descriptor instead.
func (*TaskExecResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{3}
}

func (x *TaskExecResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskExecResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 请求消息
type TaskExecPIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *TaskExecPIDRequest) Reset() {
	*x = TaskExecPIDRequest{}
	mi := &file_grpc_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecPIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecPIDRequest) ProtoMessage() {}

func (x *TaskExecPIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecPIDRequest.ProtoReflect.Descriptor instead.
func (*TaskExecPIDRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{4}
}

func (x *TaskExecPIDRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 响应消息
type TaskExecPIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskExecPIDResponseData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *TaskExecPIDResponse) Reset() {
	*x = TaskExecPIDResponse{}
	mi := &file_grpc_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecPIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecPIDResponse) ProtoMessage() {}

func (x *TaskExecPIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecPIDResponse.ProtoReflect.Descriptor instead.
func (*TaskExecPIDResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{5}
}

func (x *TaskExecPIDResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskExecPIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskExecPIDResponse) GetData() *TaskExecPIDResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 请求消息
type TaskExecStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *TaskExecStopRequest) Reset() {
	*x = TaskExecStopRequest{}
	mi := &file_grpc_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecStopRequest) ProtoMessage() {}

func (x *TaskExecStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecStopRequest.ProtoReflect.Descriptor instead.
func (*TaskExecStopRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{6}
}

func (x *TaskExecStopRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 响应消息
type TaskExecStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TaskExecStopResponse) Reset() {
	*x = TaskExecStopResponse{}
	mi := &file_grpc_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecStopResponse) ProtoMessage() {}

func (x *TaskExecStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecStopResponse.ProtoReflect.Descriptor instead.
func (*TaskExecStopResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{7}
}

func (x *TaskExecStopResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskExecStopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 请求消息
type ProcessStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId      int64  `protobuf:"varint,1,opt,name=processId,proto3" json:"processId,omitempty"`
	ProcessCommand string `protobuf:"bytes,2,opt,name=processCommand,proto3" json:"processCommand,omitempty"`
	MaxRetries     uint64 `protobuf:"varint,3,opt,name=maxRetries,proto3" json:"maxRetries,omitempty"` //最大重试次数
}

func (x *ProcessStartRequest) Reset() {
	*x = ProcessStartRequest{}
	mi := &file_grpc_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStartRequest) ProtoMessage() {}

func (x *ProcessStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStartRequest.ProtoReflect.Descriptor instead.
func (*ProcessStartRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessStartRequest) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *ProcessStartRequest) GetProcessCommand() string {
	if x != nil {
		return x.ProcessCommand
	}
	return ""
}

func (x *ProcessStartRequest) GetMaxRetries() uint64 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

// 响应消息
type ProcessStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ProcessStartResponse) Reset() {
	*x = ProcessStartResponse{}
	mi := &file_grpc_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStartResponse) ProtoMessage() {}

func (x *ProcessStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStartResponse.ProtoReflect.Descriptor instead.
func (*ProcessStartResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessStartResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProcessStartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 请求消息
type ProcessStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId int64 `protobuf:"varint,1,opt,name=processId,proto3" json:"processId,omitempty"`
}

func (x *ProcessStopRequest) Reset() {
	*x = ProcessStopRequest{}
	mi := &file_grpc_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStopRequest) ProtoMessage() {}

func (x *ProcessStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStopRequest.ProtoReflect.Descriptor instead.
func (*ProcessStopRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessStopRequest) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

// 响应消息
type ProcessStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ProcessStopResponse) Reset() {
	*x = ProcessStopResponse{}
	mi := &file_grpc_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStopResponse) ProtoMessage() {}

func (x *ProcessStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStopResponse.ProtoReflect.Descriptor instead.
func (*ProcessStopResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{11}
}

func (x *ProcessStopResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProcessStopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 请求消息
type ProcessInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId int64 `protobuf:"varint,1,opt,name=processId,proto3" json:"processId,omitempty"`
}

func (x *ProcessInfoRequest) Reset() {
	*x = ProcessInfoRequest{}
	mi := &file_grpc_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfoRequest) ProtoMessage() {}

func (x *ProcessInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfoRequest.ProtoReflect.Descriptor instead.
func (*ProcessInfoRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{12}
}

func (x *ProcessInfoRequest) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

// 响应消息
type ProcessInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ProcessInfoResponseData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ProcessInfoResponse) Reset() {
	*x = ProcessInfoResponse{}
	mi := &file_grpc_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfoResponse) ProtoMessage() {}

func (x *ProcessInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfoResponse.ProtoReflect.Descriptor instead.
func (*ProcessInfoResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{13}
}

func (x *ProcessInfoResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProcessInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessInfoResponse) GetData() *ProcessInfoResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskExecPIDResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *TaskExecPIDResponseData) Reset() {
	*x = TaskExecPIDResponseData{}
	mi := &file_grpc_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecPIDResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecPIDResponseData) ProtoMessage() {}

func (x *TaskExecPIDResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecPIDResponseData.ProtoReflect.Descriptor instead.
func (*TaskExecPIDResponseData) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TaskExecPIDResponseData) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ProcessInfoResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ProcessInfoResponseData) Reset() {
	*x = ProcessInfoResponseData{}
	mi := &file_grpc_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfoResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfoResponseData) ProtoMessage() {}

func (x *ProcessInfoResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfoResponseData.ProtoReflect.Descriptor instead.
func (*ProcessInfoResponseData) Descriptor() ([]byte, []int) {
	return file_grpc_node_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ProcessInfoResponseData) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

var File_grpc_node_proto protoreflect.FileDescriptor

var file_grpc_node_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x75, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x73, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b,
	0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x50,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x44,
	0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x44, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x32, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x18, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x32, 0xf4, 0x03, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x65, 0x63, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_node_proto_rawDescOnce sync.Once
	file_grpc_node_proto_rawDescData = file_grpc_node_proto_rawDesc
)

func file_grpc_node_proto_rawDescGZIP() []byte {
	file_grpc_node_proto_rawDescOnce.Do(func() {
		file_grpc_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_node_proto_rawDescData)
	})
	return file_grpc_node_proto_rawDescData
}

var file_grpc_node_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_grpc_node_proto_goTypes = []any{
	(*PingRequest)(nil),             // 0: service.pingRequest
	(*PingResponse)(nil),            // 1: service.pingResponse
	(*TaskExecRequest)(nil),         // 2: service.TaskExecRequest
	(*TaskExecResponse)(nil),        // 3: service.TaskExecResponse
	(*TaskExecPIDRequest)(nil),      // 4: service.TaskExecPIDRequest
	(*TaskExecPIDResponse)(nil),     // 5: service.TaskExecPIDResponse
	(*TaskExecStopRequest)(nil),     // 6: service.TaskExecStopRequest
	(*TaskExecStopResponse)(nil),    // 7: service.TaskExecStopResponse
	(*ProcessStartRequest)(nil),     // 8: service.ProcessStartRequest
	(*ProcessStartResponse)(nil),    // 9: service.ProcessStartResponse
	(*ProcessStopRequest)(nil),      // 10: service.ProcessStopRequest
	(*ProcessStopResponse)(nil),     // 11: service.ProcessStopResponse
	(*ProcessInfoRequest)(nil),      // 12: service.ProcessInfoRequest
	(*ProcessInfoResponse)(nil),     // 13: service.ProcessInfoResponse
	(*TaskExecPIDResponseData)(nil), // 14: service.TaskExecPIDResponse.data
	(*ProcessInfoResponseData)(nil), // 15: service.ProcessInfoResponse.data
}
var file_grpc_node_proto_depIdxs = []int32{
	14, // 0: service.TaskExecPIDResponse.Data:type_name -> service.TaskExecPIDResponse.data
	15, // 1: service.ProcessInfoResponse.Data:type_name -> service.ProcessInfoResponse.data
	0,  // 2: service.Node.Ping:input_type -> service.pingRequest
	2,  // 3: service.Node.TaskExec:input_type -> service.TaskExecRequest
	4,  // 4: service.Node.TaskExecPID:input_type -> service.TaskExecPIDRequest
	6,  // 5: service.Node.TaskExecStop:input_type -> service.TaskExecStopRequest
	8,  // 6: service.Node.ProcessStart:input_type -> service.ProcessStartRequest
	10, // 7: service.Node.ProcessStop:input_type -> service.ProcessStopRequest
	12, // 8: service.Node.ProcessInfo:input_type -> service.ProcessInfoRequest
	1,  // 9: service.Node.Ping:output_type -> service.pingResponse
	3,  // 10: service.Node.TaskExec:output_type -> service.TaskExecResponse
	5,  // 11: service.Node.TaskExecPID:output_type -> service.TaskExecPIDResponse
	7,  // 12: service.Node.TaskExecStop:output_type -> service.TaskExecStopResponse
	9,  // 13: service.Node.ProcessStart:output_type -> service.ProcessStartResponse
	11, // 14: service.Node.ProcessStop:output_type -> service.ProcessStopResponse
	13, // 15: service.Node.ProcessInfo:output_type -> service.ProcessInfoResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_grpc_node_proto_init() }
func file_grpc_node_proto_init() {
	if File_grpc_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_node_proto_goTypes,
		DependencyIndexes: file_grpc_node_proto_depIdxs,
		MessageInfos:      file_grpc_node_proto_msgTypes,
	}.Build()
	File_grpc_node_proto = out.File
	file_grpc_node_proto_rawDesc = nil
	file_grpc_node_proto_goTypes = nil
	file_grpc_node_proto_depIdxs = nil
}
